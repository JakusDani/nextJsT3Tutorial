import { type NextPage } from "next";
import Head from "next/head";
import { SignInButton, useUser } from "@clerk/nextjs";
import dayjs from "dayjs";
import relativeTime from 'dayjs/plugin/relativeTime'

dayjs.extend(relativeTime)

import { api } from "~/utils/api";
import type { RouterOutputs } from "~/utils/api";
import Image from "next/image";
import { LoadingPage } from "~/components/loading";

const CreatePostWizard = () => {
  const { user } = useUser()

  console.log(user);
  

  if(!user) return null

  return <div className="flex gap-3 w-full">
    <Image src={user.profileImageUrl} 
           alt={`@{user.userName}' profile picture`} 
           className="h-14 w-14 rounded-full" 
           width={56}
           height={56}/>

    <input type="text" 
           placeholder="Write some text!!!" 
           className="bg-transparent grow outline-none" />
  </div>
}

type PostWithUser = RouterOutputs["posts"]["getAll"][number]

const PostView = (props: PostWithUser) => {
  const {post, author} = props
  return (
    <div key={post.authorID} className="flex border-b border-slate-400 p-8 gap-4">
      <Image src={author.profileImageUrl} 
           alt={`@{user.userName}' profile picture`} 
           className="h-14 w-14 rounded-full" 
           height={56}
           width={56} />
      <div className="flex flex-col">
        <div className="flex">
          <span>{`@${author.username} Â· ${dayjs(post.createdAt).fromNow()}`}</span>
        </div>
        <span className="text-2xl">{post.content}</span>
      </div>
    </div>
  )
}

const Feed = () => {
  const {data, isLoading: postsLoading } = api.posts.getAll.useQuery()

  if (postsLoading) return <LoadingPage />

  if (!data) return <div>Something went wrong!!!</div>

  return (
    <div className="flex flex-col">
      {[...data, ...data]?.map((fullPost) => (
        <PostView  {...fullPost} key={fullPost.post.id} />
      ))}
    </div>
  )
}

const Home: NextPage = () => {

  const { isLoaded: userLoaded, isSignedIn } = useUser()

  api.posts.getAll.useQuery()


  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex h-screen justify-center">
        <div className="w-full h-full border-x border-slate-400 md:max-w-2xl">
          <div className="flex border-b border-slate-400 p-4">
            {!isSignedIn ? <div className="flex justify-center"><SignInButton /></div> : <CreatePostWizard /> }
          </div>
          <Feed />
        </div>
      </main>
    </>
  )
}

export default Home
